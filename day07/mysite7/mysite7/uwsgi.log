*** Starting uWSGI 2.0.18 (64bit) on [Thu Apr  2 16:21:17 2020] ***
compiled with version: 7.5.0 on 02 April 2020 04:26:29
os: Linux-5.3.0-42-generic #34~18.04.1-Ubuntu SMP Fri Feb 28 13:42:26 UTC 2020
nodename: tedu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/tarena/month3/day07/mysite7/mysite7
writing pidfile to uwsgi.pid
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /home/tarena/month3/day07/mysite7
your processes number limit is 15449
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uWSGI http bound on 127.0.0.1:8000 fd 4
uwsgi socket 0 bound to TCP address 127.0.0.1:37625 (port auto-assigned) fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]
Python main interpreter initialized at 0x55de5c723a60
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 166752 bytes (162 KB) for 2 cores
*** Operational MODE: threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x55de5c723a60 pid: 17851 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 17851)
spawned uWSGI worker 1 (pid: 17853, cores: 2)
spawned uWSGI http 1 (pid: 17854)
这是 MyMw3 的 process_request 被调用
Not Found: /
[pid: 17853|app: 0|req: 1/1] 127.0.0.1 () {38 vars in 695 bytes} [Thu Apr  2 16:23:51 2020] GET / => generated 2457 bytes in 79 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
Not Found: /t
[pid: 17853|app: 0|req: 2/2] 127.0.0.1 () {38 vars in 697 bytes} [Thu Apr  2 16:24:04 2020] GET /t => generated 2478 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 17853|app: 0|req: 3/3] 127.0.0.1 () {38 vars in 703 bytes} [Thu Apr  2 16:24:09 2020] GET /page => generated 567 bytes in 62 msecs (HTTP/1.1 200) 3 headers in 109 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
Not Found: /
[pid: 17853|app: 0|req: 4/4] 127.0.0.1 () {38 vars in 694 bytes} [Thu Apr  2 18:00:20 2020] GET / => generated 2457 bytes in 24 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
Not Found: /
[pid: 17853|app: 0|req: 5/5] 127.0.0.1 () {38 vars in 695 bytes} [Thu Apr  2 18:00:29 2020] GET / => generated 2457 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 17853|app: 0|req: 6/6] 127.0.0.1 () {38 vars in 703 bytes} [Thu Apr  2 18:00:57 2020] GET /page => generated 567 bytes in 14 msecs (HTTP/1.1 200) 3 headers in 109 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 17853|app: 0|req: 7/7] 127.0.0.1 () {40 vars in 758 bytes} [Thu Apr  2 18:01:01 2020] GET /page?page=2 => generated 594 bytes in 9 msecs (HTTP/1.1 200) 3 headers in 109 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 17853|app: 0|req: 8/8] 127.0.0.1 () {40 vars in 765 bytes} [Thu Apr  2 18:01:02 2020] GET /page?page=3 => generated 537 bytes in 7 msecs (HTTP/1.1 200) 3 headers in 109 bytes (1 switches on core 1)
SIGINT/SIGQUIT received...killing workers...
gateway "uWSGI http 1" has been buried (pid: 17854)
worker 1 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.18 (64bit) on [Fri Apr  3 10:33:59 2020] ***
compiled with version: 7.5.0 on 02 April 2020 04:26:29
os: Linux-5.3.0-45-generic #37~18.04.1-Ubuntu SMP Fri Mar 27 15:58:10 UTC 2020
nodename: tedu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/tarena/month3/day07/mysite7/mysite7
writing pidfile to uwsgi.pid
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /home/tarena/month3/day07/mysite7
your processes number limit is 15449
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8000 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]
Python main interpreter initialized at 0x559d2c02e940
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 166752 bytes (162 KB) for 2 cores
*** Operational MODE: threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x559d2c02e940 pid: 7962 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 7962)
spawned uWSGI worker 1 (pid: 7964, cores: 2)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 7964|app: 0|req: 1/1] 127.0.0.1 () {40 vars in 655 bytes} [Fri Apr  3 10:37:56 2020] GET /t_mw => generated 26 bytes in 60 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
Not Found: /favicon.ico
[pid: 7964|app: 0|req: 2/2] 127.0.0.1 () {38 vars in 574 bytes} [Fri Apr  3 10:37:57 2020] GET /favicon.ico => generated 2503 bytes in 25 msecs (HTTP/1.1 404) 3 headers in 102 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 7964|app: 0|req: 3/3] 127.0.0.1 () {40 vars in 655 bytes} [Fri Apr  3 10:38:07 2020] GET /t_mw => generated 26 bytes in 1 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.18 (64bit) on [Fri Apr  3 11:02:19 2020] ***
compiled with version: 7.5.0 on 02 April 2020 04:26:29
os: Linux-5.3.0-45-generic #37~18.04.1-Ubuntu SMP Fri Mar 27 15:58:10 UTC 2020
nodename: tedu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/tarena/month3/day07/mysite7/mysite7
writing pidfile to uwsgi.pid
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /home/tarena/month3/day07/mysite7
your processes number limit is 15449
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8000 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]
Python main interpreter initialized at 0x5610d154f940
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 166752 bytes (162 KB) for 2 cores
*** Operational MODE: threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x5610d154f940 pid: 8699 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 8699)
spawned uWSGI worker 1 (pid: 8701, cores: 2)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 8701|app: 0|req: 1/1] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:02:59 2020] GET /t_mw => generated 26 bytes in 33 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 8701|app: 0|req: 2/2] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:00 2020] GET /t_mw => generated 26 bytes in 4 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 8701|app: 0|req: 3/3] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:01 2020] GET /t_mw => generated 26 bytes in 1 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 8701|app: 0|req: 4/4] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:02 2020] GET /t_mw => generated 26 bytes in 1 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
--test_mw do --
[pid: 8701|app: 0|req: 5/5] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:03 2020] GET /t_mw => generated 26 bytes in 2 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
[pid: 8701|app: 0|req: 6/6] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:04 2020] GET /t_mw => generated 27 bytes in 1 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 1)
[pid: 8701|app: 0|req: 7/7] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:06 2020] GET /t_mw => generated 27 bytes in 1 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 0)
[pid: 8701|app: 0|req: 8/8] 127.0.0.1 () {42 vars in 686 bytes} [Fri Apr  3 11:03:07 2020] GET /t_mw => generated 27 bytes in 2 msecs (HTTP/1.1 200) 3 headers in 108 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 9/9] 127.0.0.1 () {40 vars in 663 bytes} [Fri Apr  3 11:03:11 2020] GET /t_mwgtrt => generated 82 bytes in 72 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 8701|app: 0|req: 10/10] 127.0.0.1 () {40 vars in 657 bytes} [Fri Apr  3 11:04:28 2020] GET /admin => generated 0 bytes in 3 msecs (HTTP/1.1 301) 3 headers in 112 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 11/11] 127.0.0.1 () {40 vars in 659 bytes} [Fri Apr  3 11:04:28 2020] GET /admin/ => generated 0 bytes in 51 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 12/12] 127.0.0.1 () {40 vars in 696 bytes} [Fri Apr  3 11:04:28 2020] GET /admin/login/?next=/admin/ => generated 1654 bytes in 271 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 14/13] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:04:29 2020] GET /static/admin/css/base.css => generated 99 bytes in 10 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 8701|app: 0|req: 14/14] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:04:29 2020] GET /static/admin/css/login.css => generated 100 bytes in 13 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 15/15] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:04:40 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 162 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 17/16] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:04:40 2020] GET /static/admin/css/base.css => generated 99 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 1)
[pid: 8701|app: 0|req: 17/17] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:04:40 2020] GET /static/admin/css/login.css => generated 100 bytes in 4 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 18/18] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:04:55 2020] POST /admin/login/?next=/admin/ => generated 1814 bytes in 105 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 19/19] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:04:55 2020] GET /static/admin/css/base.css => generated 99 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 20/20] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:04:55 2020] GET /static/admin/css/login.css => generated 100 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 21/21] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:05:01 2020] POST /admin/login/?next=/admin/ => generated 1820 bytes in 88 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 23/22] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:05:02 2020] GET /static/admin/css/base.css => generated 99 bytes in 6 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 1)
[pid: 8701|app: 0|req: 23/23] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:05:02 2020] GET /static/admin/css/login.css => generated 100 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 24/24] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:05:14 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 87 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 26/25] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:05:14 2020] GET /static/admin/css/base.css => generated 99 bytes in 7 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
[pid: 8701|app: 0|req: 26/26] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:05:14 2020] GET /static/admin/css/login.css => generated 100 bytes in 8 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 27/27] 127.0.0.1 () {44 vars in 806 bytes} [Fri Apr  3 11:05:26 2020] GET /admin/ => generated 0 bytes in 2 msecs (HTTP/1.1 302) 7 headers in 265 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 28/28] 127.0.0.1 () {44 vars in 843 bytes} [Fri Apr  3 11:05:26 2020] GET /admin/login/?next=/admin/ => generated 1654 bytes in 17 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 29/29] 127.0.0.1 () {42 vars in 753 bytes} [Fri Apr  3 11:05:27 2020] GET /static/admin/css/base.css => generated 99 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 30/30] 127.0.0.1 () {42 vars in 755 bytes} [Fri Apr  3 11:05:27 2020] GET /static/admin/css/login.css => generated 100 bytes in 3 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 31/31] 127.0.0.1 () {42 vars in 785 bytes} [Fri Apr  3 11:27:03 2020] GET /admin/login/?next=/admin/ => generated 1654 bytes in 23 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 32/32] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:27:17 2020] POST /admin/login/?next=/admin/ => generated 1814 bytes in 102 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 33/33] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:27:25 2020] POST /admin/login/?next=/admin/ => generated 1814 bytes in 126 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 34/34] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:27:41 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 86 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 35/35] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:27:57 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 92 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 36/36] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:28:05 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 81 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 8701|app: 0|req: 37/37] 127.0.0.1 () {50 vars in 991 bytes} [Fri Apr  3 11:28:14 2020] POST /admin/login/?next=/admin/ => generated 1818 bytes in 78 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 0)
SIGINT/SIGQUIT received...killing workers...
worker 1 buried after 1 seconds
goodbye to uWSGI.
*** Starting uWSGI 2.0.18 (64bit) on [Fri Apr  3 11:55:17 2020] ***
compiled with version: 7.5.0 on 02 April 2020 04:26:29
os: Linux-5.3.0-45-generic #37~18.04.1-Ubuntu SMP Fri Mar 27 15:58:10 UTC 2020
nodename: tedu
machine: x86_64
clock source: unix
detected number of CPU cores: 4
current working directory: /home/tarena/month3/day07/mysite7/mysite7
writing pidfile to uwsgi.pid
detected binary path: /usr/local/bin/uwsgi
!!! no internal routing support, rebuild with pcre support !!!
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
chdir() to /home/tarena/month3/day07/mysite7
your processes number limit is 15449
your memory page size is 4096 bytes
detected max file descriptor number: 1024
lock engine: pthread robust mutexes
thunder lock: disabled (you can enable it with --thunder-lock)
uwsgi socket 0 bound to TCP address 127.0.0.1:8000 fd 3
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
Python version: 3.6.9 (default, Nov  7 2019, 10:44:02)  [GCC 8.3.0]
Python main interpreter initialized at 0x55df58b80940
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
python threads support enabled
your server socket listen backlog is limited to 100 connections
your mercy for graceful operations on workers is 60 seconds
mapped 166752 bytes (162 KB) for 2 cores
*** Operational MODE: threaded ***
WSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x55df58b80940 pid: 9382 (default app)
uWSGI running as root, you can use --uid/--gid/--chroot options
*** WARNING: you are running uWSGI as root !!! (use the --uid flag) *** 
*** uWSGI is running in multiple interpreter mode ***
spawned uWSGI master process (pid: 9382)
spawned uWSGI worker 1 (pid: 9384, cores: 2)
[pid: 9384|app: 0|req: 1/1] 127.0.0.1 () {42 vars in 758 bytes} [Fri Apr  3 11:55:34 2020] GET /admin/login => generated 0 bytes in 33 msecs (HTTP/1.1 301) 3 headers in 118 bytes (1 switches on core 0)
这是 MyMw3 的 process_request 被调用
[pid: 9384|app: 0|req: 2/2] 127.0.0.1 () {42 vars in 760 bytes} [Fri Apr  3 11:55:34 2020] GET /admin/login/ => generated 1641 bytes in 210 msecs (HTTP/1.1 200) 7 headers in 381 bytes (1 switches on core 1)
这是 MyMw3 的 process_request 被调用
[pid: 9384|app: 0|req: 3/3] 127.0.0.1 () {42 vars in 770 bytes} [Fri Apr  3 11:55:38 2020] GET /admin/login/afeaf => generated 173 bytes in 5 msecs (HTTP/1.1 404) 3 headers in 116 bytes (1 switches on core 0)
